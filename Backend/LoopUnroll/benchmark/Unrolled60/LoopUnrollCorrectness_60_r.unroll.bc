; ModuleID = 'LoopUnrollCorrectness_60.unroll.bc'
source_filename = "../../../Frontend/clang-plugins/clang-plugins-checker/test/LoopUnrollCorrectness.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@__const.main.A = private unnamed_addr constant [40 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9], align 16
@__const.main.B = private unnamed_addr constant [40 x i32] [i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1], align 16
@.str = private unnamed_addr constant [4 x i8] c"%d \00", align 1

; Function Attrs: mustprogress noinline norecurse uwtable
define dso_local noundef i32 @main() #0 {
entry:
  %A = alloca [40 x i32], align 16
  %B = alloca [40 x i32], align 16
  %c = alloca [40 x i32], align 16
  %0 = bitcast [40 x i32]* %A to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 bitcast ([40 x i32]* @__const.main.A to i8*), i64 160, i1 false)
  %1 = bitcast [40 x i32]* %B to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %1, i8* align 16 bitcast ([40 x i32]* @__const.main.B to i8*), i64 160, i1 false)
  %call = call i64 @clock() #4
  br label %for.body

for.body:                                         ; preds = %entry
  %arrayidx = getelementptr inbounds [40 x i32], [40 x i32]* %A, i64 0, i64 0
  %2 = load i32, i32* %arrayidx, align 4
  %arrayidx2 = getelementptr inbounds [40 x i32], [40 x i32]* %B, i64 0, i64 0
  %3 = load i32, i32* %arrayidx2, align 4
  %add = add nsw i32 %2, %3
  %arrayidx4 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 0
  store i32 %add, i32* %arrayidx4, align 4
  %arrayidx6 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 0
  %4 = load i32, i32* %arrayidx6, align 4
  %arrayidx.1 = getelementptr inbounds [40 x i32], [40 x i32]* %A, i64 0, i64 1
  %5 = load i32, i32* %arrayidx.1, align 4
  %arrayidx2.1 = getelementptr inbounds [40 x i32], [40 x i32]* %B, i64 0, i64 1
  %6 = load i32, i32* %arrayidx2.1, align 4
  %add.1 = add nsw i32 %5, %6
  %arrayidx4.1 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 1
  store i32 %add.1, i32* %arrayidx4.1, align 4
  %arrayidx6.1 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 1
  %7 = load i32, i32* %arrayidx6.1, align 4
  %add7.1 = add nsw i32 %4, %7
  %arrayidx.2 = getelementptr inbounds [40 x i32], [40 x i32]* %A, i64 0, i64 2
  %8 = load i32, i32* %arrayidx.2, align 4
  %arrayidx2.2 = getelementptr inbounds [40 x i32], [40 x i32]* %B, i64 0, i64 2
  %9 = load i32, i32* %arrayidx2.2, align 4
  %add.2 = add nsw i32 %8, %9
  %arrayidx4.2 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 2
  store i32 %add.2, i32* %arrayidx4.2, align 4
  %arrayidx6.2 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 2
  %10 = load i32, i32* %arrayidx6.2, align 4
  %add7.2 = add nsw i32 %add7.1, %10
  %arrayidx.3 = getelementptr inbounds [40 x i32], [40 x i32]* %A, i64 0, i64 3
  %11 = load i32, i32* %arrayidx.3, align 4
  %arrayidx2.3 = getelementptr inbounds [40 x i32], [40 x i32]* %B, i64 0, i64 3
  %12 = load i32, i32* %arrayidx2.3, align 4
  %add.3 = add nsw i32 %11, %12
  %arrayidx4.3 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 3
  store i32 %add.3, i32* %arrayidx4.3, align 4
  %arrayidx6.3 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 3
  %13 = load i32, i32* %arrayidx6.3, align 4
  %add7.3 = add nsw i32 %add7.2, %13
  %arrayidx.4 = getelementptr inbounds [40 x i32], [40 x i32]* %A, i64 0, i64 4
  %14 = load i32, i32* %arrayidx.4, align 4
  %arrayidx2.4 = getelementptr inbounds [40 x i32], [40 x i32]* %B, i64 0, i64 4
  %15 = load i32, i32* %arrayidx2.4, align 4
  %add.4 = add nsw i32 %14, %15
  %arrayidx4.4 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 4
  store i32 %add.4, i32* %arrayidx4.4, align 4
  %arrayidx6.4 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 4
  %16 = load i32, i32* %arrayidx6.4, align 4
  %add7.4 = add nsw i32 %add7.3, %16
  %arrayidx.5 = getelementptr inbounds [40 x i32], [40 x i32]* %A, i64 0, i64 5
  %17 = load i32, i32* %arrayidx.5, align 4
  %arrayidx2.5 = getelementptr inbounds [40 x i32], [40 x i32]* %B, i64 0, i64 5
  %18 = load i32, i32* %arrayidx2.5, align 4
  %add.5 = add nsw i32 %17, %18
  %arrayidx4.5 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 5
  store i32 %add.5, i32* %arrayidx4.5, align 4
  %arrayidx6.5 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 5
  %19 = load i32, i32* %arrayidx6.5, align 4
  %add7.5 = add nsw i32 %add7.4, %19
  %arrayidx.6 = getelementptr inbounds [40 x i32], [40 x i32]* %A, i64 0, i64 6
  %20 = load i32, i32* %arrayidx.6, align 4
  %arrayidx2.6 = getelementptr inbounds [40 x i32], [40 x i32]* %B, i64 0, i64 6
  %21 = load i32, i32* %arrayidx2.6, align 4
  %add.6 = add nsw i32 %20, %21
  %arrayidx4.6 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 6
  store i32 %add.6, i32* %arrayidx4.6, align 4
  %arrayidx6.6 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 6
  %22 = load i32, i32* %arrayidx6.6, align 4
  %add7.6 = add nsw i32 %add7.5, %22
  %arrayidx.7 = getelementptr inbounds [40 x i32], [40 x i32]* %A, i64 0, i64 7
  %23 = load i32, i32* %arrayidx.7, align 4
  %arrayidx2.7 = getelementptr inbounds [40 x i32], [40 x i32]* %B, i64 0, i64 7
  %24 = load i32, i32* %arrayidx2.7, align 4
  %add.7 = add nsw i32 %23, %24
  %arrayidx4.7 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 7
  store i32 %add.7, i32* %arrayidx4.7, align 4
  %arrayidx6.7 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 7
  %25 = load i32, i32* %arrayidx6.7, align 4
  %add7.7 = add nsw i32 %add7.6, %25
  %arrayidx.8 = getelementptr inbounds [40 x i32], [40 x i32]* %A, i64 0, i64 8
  %26 = load i32, i32* %arrayidx.8, align 4
  %arrayidx2.8 = getelementptr inbounds [40 x i32], [40 x i32]* %B, i64 0, i64 8
  %27 = load i32, i32* %arrayidx2.8, align 4
  %add.8 = add nsw i32 %26, %27
  %arrayidx4.8 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 8
  store i32 %add.8, i32* %arrayidx4.8, align 4
  %arrayidx6.8 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 8
  %28 = load i32, i32* %arrayidx6.8, align 4
  %add7.8 = add nsw i32 %add7.7, %28
  %arrayidx.9 = getelementptr inbounds [40 x i32], [40 x i32]* %A, i64 0, i64 9
  %29 = load i32, i32* %arrayidx.9, align 4
  %arrayidx2.9 = getelementptr inbounds [40 x i32], [40 x i32]* %B, i64 0, i64 9
  %30 = load i32, i32* %arrayidx2.9, align 4
  %add.9 = add nsw i32 %29, %30
  %arrayidx4.9 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 9
  store i32 %add.9, i32* %arrayidx4.9, align 4
  %arrayidx6.9 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 9
  %31 = load i32, i32* %arrayidx6.9, align 4
  %add7.9 = add nsw i32 %add7.8, %31
  %arrayidx.10 = getelementptr inbounds [40 x i32], [40 x i32]* %A, i64 0, i64 10
  %32 = load i32, i32* %arrayidx.10, align 4
  %arrayidx2.10 = getelementptr inbounds [40 x i32], [40 x i32]* %B, i64 0, i64 10
  %33 = load i32, i32* %arrayidx2.10, align 4
  %add.10 = add nsw i32 %32, %33
  %arrayidx4.10 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 10
  store i32 %add.10, i32* %arrayidx4.10, align 4
  %arrayidx6.10 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 10
  %34 = load i32, i32* %arrayidx6.10, align 4
  %add7.10 = add nsw i32 %add7.9, %34
  %arrayidx.11 = getelementptr inbounds [40 x i32], [40 x i32]* %A, i64 0, i64 11
  %35 = load i32, i32* %arrayidx.11, align 4
  %arrayidx2.11 = getelementptr inbounds [40 x i32], [40 x i32]* %B, i64 0, i64 11
  %36 = load i32, i32* %arrayidx2.11, align 4
  %add.11 = add nsw i32 %35, %36
  %arrayidx4.11 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 11
  store i32 %add.11, i32* %arrayidx4.11, align 4
  %arrayidx6.11 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 11
  %37 = load i32, i32* %arrayidx6.11, align 4
  %add7.11 = add nsw i32 %add7.10, %37
  %arrayidx.12 = getelementptr inbounds [40 x i32], [40 x i32]* %A, i64 0, i64 12
  %38 = load i32, i32* %arrayidx.12, align 4
  %arrayidx2.12 = getelementptr inbounds [40 x i32], [40 x i32]* %B, i64 0, i64 12
  %39 = load i32, i32* %arrayidx2.12, align 4
  %add.12 = add nsw i32 %38, %39
  %arrayidx4.12 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 12
  store i32 %add.12, i32* %arrayidx4.12, align 4
  %arrayidx6.12 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 12
  %40 = load i32, i32* %arrayidx6.12, align 4
  %add7.12 = add nsw i32 %add7.11, %40
  %arrayidx.13 = getelementptr inbounds [40 x i32], [40 x i32]* %A, i64 0, i64 13
  %41 = load i32, i32* %arrayidx.13, align 4
  %arrayidx2.13 = getelementptr inbounds [40 x i32], [40 x i32]* %B, i64 0, i64 13
  %42 = load i32, i32* %arrayidx2.13, align 4
  %add.13 = add nsw i32 %41, %42
  %arrayidx4.13 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 13
  store i32 %add.13, i32* %arrayidx4.13, align 4
  %arrayidx6.13 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 13
  %43 = load i32, i32* %arrayidx6.13, align 4
  %add7.13 = add nsw i32 %add7.12, %43
  %arrayidx.14 = getelementptr inbounds [40 x i32], [40 x i32]* %A, i64 0, i64 14
  %44 = load i32, i32* %arrayidx.14, align 4
  %arrayidx2.14 = getelementptr inbounds [40 x i32], [40 x i32]* %B, i64 0, i64 14
  %45 = load i32, i32* %arrayidx2.14, align 4
  %add.14 = add nsw i32 %44, %45
  %arrayidx4.14 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 14
  store i32 %add.14, i32* %arrayidx4.14, align 4
  %arrayidx6.14 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 14
  %46 = load i32, i32* %arrayidx6.14, align 4
  %add7.14 = add nsw i32 %add7.13, %46
  %arrayidx.15 = getelementptr inbounds [40 x i32], [40 x i32]* %A, i64 0, i64 15
  %47 = load i32, i32* %arrayidx.15, align 4
  %arrayidx2.15 = getelementptr inbounds [40 x i32], [40 x i32]* %B, i64 0, i64 15
  %48 = load i32, i32* %arrayidx2.15, align 4
  %add.15 = add nsw i32 %47, %48
  %arrayidx4.15 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 15
  store i32 %add.15, i32* %arrayidx4.15, align 4
  %arrayidx6.15 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 15
  %49 = load i32, i32* %arrayidx6.15, align 4
  %add7.15 = add nsw i32 %add7.14, %49
  %arrayidx.16 = getelementptr inbounds [40 x i32], [40 x i32]* %A, i64 0, i64 16
  %50 = load i32, i32* %arrayidx.16, align 4
  %arrayidx2.16 = getelementptr inbounds [40 x i32], [40 x i32]* %B, i64 0, i64 16
  %51 = load i32, i32* %arrayidx2.16, align 4
  %add.16 = add nsw i32 %50, %51
  %arrayidx4.16 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 16
  store i32 %add.16, i32* %arrayidx4.16, align 4
  %arrayidx6.16 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 16
  %52 = load i32, i32* %arrayidx6.16, align 4
  %add7.16 = add nsw i32 %add7.15, %52
  %arrayidx.17 = getelementptr inbounds [40 x i32], [40 x i32]* %A, i64 0, i64 17
  %53 = load i32, i32* %arrayidx.17, align 4
  %arrayidx2.17 = getelementptr inbounds [40 x i32], [40 x i32]* %B, i64 0, i64 17
  %54 = load i32, i32* %arrayidx2.17, align 4
  %add.17 = add nsw i32 %53, %54
  %arrayidx4.17 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 17
  store i32 %add.17, i32* %arrayidx4.17, align 4
  %arrayidx6.17 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 17
  %55 = load i32, i32* %arrayidx6.17, align 4
  %add7.17 = add nsw i32 %add7.16, %55
  %arrayidx.18 = getelementptr inbounds [40 x i32], [40 x i32]* %A, i64 0, i64 18
  %56 = load i32, i32* %arrayidx.18, align 4
  %arrayidx2.18 = getelementptr inbounds [40 x i32], [40 x i32]* %B, i64 0, i64 18
  %57 = load i32, i32* %arrayidx2.18, align 4
  %add.18 = add nsw i32 %56, %57
  %arrayidx4.18 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 18
  store i32 %add.18, i32* %arrayidx4.18, align 4
  %arrayidx6.18 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 18
  %58 = load i32, i32* %arrayidx6.18, align 4
  %add7.18 = add nsw i32 %add7.17, %58
  %arrayidx.19 = getelementptr inbounds [40 x i32], [40 x i32]* %A, i64 0, i64 19
  %59 = load i32, i32* %arrayidx.19, align 4
  %arrayidx2.19 = getelementptr inbounds [40 x i32], [40 x i32]* %B, i64 0, i64 19
  %60 = load i32, i32* %arrayidx2.19, align 4
  %add.19 = add nsw i32 %59, %60
  %arrayidx4.19 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 19
  store i32 %add.19, i32* %arrayidx4.19, align 4
  %arrayidx6.19 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 19
  %61 = load i32, i32* %arrayidx6.19, align 4
  %add7.19 = add nsw i32 %add7.18, %61
  %arrayidx.20 = getelementptr inbounds [40 x i32], [40 x i32]* %A, i64 0, i64 20
  %62 = load i32, i32* %arrayidx.20, align 4
  %arrayidx2.20 = getelementptr inbounds [40 x i32], [40 x i32]* %B, i64 0, i64 20
  %63 = load i32, i32* %arrayidx2.20, align 4
  %add.20 = add nsw i32 %62, %63
  %arrayidx4.20 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 20
  store i32 %add.20, i32* %arrayidx4.20, align 4
  %arrayidx6.20 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 20
  %64 = load i32, i32* %arrayidx6.20, align 4
  %add7.20 = add nsw i32 %add7.19, %64
  %arrayidx.21 = getelementptr inbounds [40 x i32], [40 x i32]* %A, i64 0, i64 21
  %65 = load i32, i32* %arrayidx.21, align 4
  %arrayidx2.21 = getelementptr inbounds [40 x i32], [40 x i32]* %B, i64 0, i64 21
  %66 = load i32, i32* %arrayidx2.21, align 4
  %add.21 = add nsw i32 %65, %66
  %arrayidx4.21 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 21
  store i32 %add.21, i32* %arrayidx4.21, align 4
  %arrayidx6.21 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 21
  %67 = load i32, i32* %arrayidx6.21, align 4
  %add7.21 = add nsw i32 %add7.20, %67
  %arrayidx.22 = getelementptr inbounds [40 x i32], [40 x i32]* %A, i64 0, i64 22
  %68 = load i32, i32* %arrayidx.22, align 4
  %arrayidx2.22 = getelementptr inbounds [40 x i32], [40 x i32]* %B, i64 0, i64 22
  %69 = load i32, i32* %arrayidx2.22, align 4
  %add.22 = add nsw i32 %68, %69
  %arrayidx4.22 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 22
  store i32 %add.22, i32* %arrayidx4.22, align 4
  %arrayidx6.22 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 22
  %70 = load i32, i32* %arrayidx6.22, align 4
  %add7.22 = add nsw i32 %add7.21, %70
  %arrayidx.23 = getelementptr inbounds [40 x i32], [40 x i32]* %A, i64 0, i64 23
  %71 = load i32, i32* %arrayidx.23, align 4
  %arrayidx2.23 = getelementptr inbounds [40 x i32], [40 x i32]* %B, i64 0, i64 23
  %72 = load i32, i32* %arrayidx2.23, align 4
  %add.23 = add nsw i32 %71, %72
  %arrayidx4.23 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 23
  store i32 %add.23, i32* %arrayidx4.23, align 4
  %arrayidx6.23 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 23
  %73 = load i32, i32* %arrayidx6.23, align 4
  %add7.23 = add nsw i32 %add7.22, %73
  %arrayidx.24 = getelementptr inbounds [40 x i32], [40 x i32]* %A, i64 0, i64 24
  %74 = load i32, i32* %arrayidx.24, align 4
  %arrayidx2.24 = getelementptr inbounds [40 x i32], [40 x i32]* %B, i64 0, i64 24
  %75 = load i32, i32* %arrayidx2.24, align 4
  %add.24 = add nsw i32 %74, %75
  %arrayidx4.24 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 24
  store i32 %add.24, i32* %arrayidx4.24, align 4
  %arrayidx6.24 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 24
  %76 = load i32, i32* %arrayidx6.24, align 4
  %add7.24 = add nsw i32 %add7.23, %76
  %arrayidx.25 = getelementptr inbounds [40 x i32], [40 x i32]* %A, i64 0, i64 25
  %77 = load i32, i32* %arrayidx.25, align 4
  %arrayidx2.25 = getelementptr inbounds [40 x i32], [40 x i32]* %B, i64 0, i64 25
  %78 = load i32, i32* %arrayidx2.25, align 4
  %add.25 = add nsw i32 %77, %78
  %arrayidx4.25 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 25
  store i32 %add.25, i32* %arrayidx4.25, align 4
  %arrayidx6.25 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 25
  %79 = load i32, i32* %arrayidx6.25, align 4
  %add7.25 = add nsw i32 %add7.24, %79
  %arrayidx.26 = getelementptr inbounds [40 x i32], [40 x i32]* %A, i64 0, i64 26
  %80 = load i32, i32* %arrayidx.26, align 4
  %arrayidx2.26 = getelementptr inbounds [40 x i32], [40 x i32]* %B, i64 0, i64 26
  %81 = load i32, i32* %arrayidx2.26, align 4
  %add.26 = add nsw i32 %80, %81
  %arrayidx4.26 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 26
  store i32 %add.26, i32* %arrayidx4.26, align 4
  %arrayidx6.26 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 26
  %82 = load i32, i32* %arrayidx6.26, align 4
  %add7.26 = add nsw i32 %add7.25, %82
  %arrayidx.27 = getelementptr inbounds [40 x i32], [40 x i32]* %A, i64 0, i64 27
  %83 = load i32, i32* %arrayidx.27, align 4
  %arrayidx2.27 = getelementptr inbounds [40 x i32], [40 x i32]* %B, i64 0, i64 27
  %84 = load i32, i32* %arrayidx2.27, align 4
  %add.27 = add nsw i32 %83, %84
  %arrayidx4.27 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 27
  store i32 %add.27, i32* %arrayidx4.27, align 4
  %arrayidx6.27 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 27
  %85 = load i32, i32* %arrayidx6.27, align 4
  %add7.27 = add nsw i32 %add7.26, %85
  %arrayidx.28 = getelementptr inbounds [40 x i32], [40 x i32]* %A, i64 0, i64 28
  %86 = load i32, i32* %arrayidx.28, align 4
  %arrayidx2.28 = getelementptr inbounds [40 x i32], [40 x i32]* %B, i64 0, i64 28
  %87 = load i32, i32* %arrayidx2.28, align 4
  %add.28 = add nsw i32 %86, %87
  %arrayidx4.28 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 28
  store i32 %add.28, i32* %arrayidx4.28, align 4
  %arrayidx6.28 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 28
  %88 = load i32, i32* %arrayidx6.28, align 4
  %add7.28 = add nsw i32 %add7.27, %88
  %arrayidx.29 = getelementptr inbounds [40 x i32], [40 x i32]* %A, i64 0, i64 29
  %89 = load i32, i32* %arrayidx.29, align 4
  %arrayidx2.29 = getelementptr inbounds [40 x i32], [40 x i32]* %B, i64 0, i64 29
  %90 = load i32, i32* %arrayidx2.29, align 4
  %add.29 = add nsw i32 %89, %90
  %arrayidx4.29 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 29
  store i32 %add.29, i32* %arrayidx4.29, align 4
  %arrayidx6.29 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 29
  %91 = load i32, i32* %arrayidx6.29, align 4
  %add7.29 = add nsw i32 %add7.28, %91
  %arrayidx.30 = getelementptr inbounds [40 x i32], [40 x i32]* %A, i64 0, i64 30
  %92 = load i32, i32* %arrayidx.30, align 4
  %arrayidx2.30 = getelementptr inbounds [40 x i32], [40 x i32]* %B, i64 0, i64 30
  %93 = load i32, i32* %arrayidx2.30, align 4
  %add.30 = add nsw i32 %92, %93
  %arrayidx4.30 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 30
  store i32 %add.30, i32* %arrayidx4.30, align 4
  %arrayidx6.30 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 30
  %94 = load i32, i32* %arrayidx6.30, align 4
  %add7.30 = add nsw i32 %add7.29, %94
  %arrayidx.31 = getelementptr inbounds [40 x i32], [40 x i32]* %A, i64 0, i64 31
  %95 = load i32, i32* %arrayidx.31, align 4
  %arrayidx2.31 = getelementptr inbounds [40 x i32], [40 x i32]* %B, i64 0, i64 31
  %96 = load i32, i32* %arrayidx2.31, align 4
  %add.31 = add nsw i32 %95, %96
  %arrayidx4.31 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 31
  store i32 %add.31, i32* %arrayidx4.31, align 4
  %arrayidx6.31 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 31
  %97 = load i32, i32* %arrayidx6.31, align 4
  %add7.31 = add nsw i32 %add7.30, %97
  %arrayidx.32 = getelementptr inbounds [40 x i32], [40 x i32]* %A, i64 0, i64 32
  %98 = load i32, i32* %arrayidx.32, align 4
  %arrayidx2.32 = getelementptr inbounds [40 x i32], [40 x i32]* %B, i64 0, i64 32
  %99 = load i32, i32* %arrayidx2.32, align 4
  %add.32 = add nsw i32 %98, %99
  %arrayidx4.32 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 32
  store i32 %add.32, i32* %arrayidx4.32, align 4
  %arrayidx6.32 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 32
  %100 = load i32, i32* %arrayidx6.32, align 4
  %add7.32 = add nsw i32 %add7.31, %100
  %arrayidx.33 = getelementptr inbounds [40 x i32], [40 x i32]* %A, i64 0, i64 33
  %101 = load i32, i32* %arrayidx.33, align 4
  %arrayidx2.33 = getelementptr inbounds [40 x i32], [40 x i32]* %B, i64 0, i64 33
  %102 = load i32, i32* %arrayidx2.33, align 4
  %add.33 = add nsw i32 %101, %102
  %arrayidx4.33 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 33
  store i32 %add.33, i32* %arrayidx4.33, align 4
  %arrayidx6.33 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 33
  %103 = load i32, i32* %arrayidx6.33, align 4
  %add7.33 = add nsw i32 %add7.32, %103
  %arrayidx.34 = getelementptr inbounds [40 x i32], [40 x i32]* %A, i64 0, i64 34
  %104 = load i32, i32* %arrayidx.34, align 4
  %arrayidx2.34 = getelementptr inbounds [40 x i32], [40 x i32]* %B, i64 0, i64 34
  %105 = load i32, i32* %arrayidx2.34, align 4
  %add.34 = add nsw i32 %104, %105
  %arrayidx4.34 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 34
  store i32 %add.34, i32* %arrayidx4.34, align 4
  %arrayidx6.34 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 34
  %106 = load i32, i32* %arrayidx6.34, align 4
  %add7.34 = add nsw i32 %add7.33, %106
  %arrayidx.35 = getelementptr inbounds [40 x i32], [40 x i32]* %A, i64 0, i64 35
  %107 = load i32, i32* %arrayidx.35, align 4
  %arrayidx2.35 = getelementptr inbounds [40 x i32], [40 x i32]* %B, i64 0, i64 35
  %108 = load i32, i32* %arrayidx2.35, align 4
  %add.35 = add nsw i32 %107, %108
  %arrayidx4.35 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 35
  store i32 %add.35, i32* %arrayidx4.35, align 4
  %arrayidx6.35 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 35
  %109 = load i32, i32* %arrayidx6.35, align 4
  %add7.35 = add nsw i32 %add7.34, %109
  %arrayidx.36 = getelementptr inbounds [40 x i32], [40 x i32]* %A, i64 0, i64 36
  %110 = load i32, i32* %arrayidx.36, align 4
  %arrayidx2.36 = getelementptr inbounds [40 x i32], [40 x i32]* %B, i64 0, i64 36
  %111 = load i32, i32* %arrayidx2.36, align 4
  %add.36 = add nsw i32 %110, %111
  %arrayidx4.36 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 36
  store i32 %add.36, i32* %arrayidx4.36, align 4
  %arrayidx6.36 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 36
  %112 = load i32, i32* %arrayidx6.36, align 4
  %add7.36 = add nsw i32 %add7.35, %112
  %arrayidx.37 = getelementptr inbounds [40 x i32], [40 x i32]* %A, i64 0, i64 37
  %113 = load i32, i32* %arrayidx.37, align 4
  %arrayidx2.37 = getelementptr inbounds [40 x i32], [40 x i32]* %B, i64 0, i64 37
  %114 = load i32, i32* %arrayidx2.37, align 4
  %add.37 = add nsw i32 %113, %114
  %arrayidx4.37 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 37
  store i32 %add.37, i32* %arrayidx4.37, align 4
  %arrayidx6.37 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 37
  %115 = load i32, i32* %arrayidx6.37, align 4
  %add7.37 = add nsw i32 %add7.36, %115
  %arrayidx.38 = getelementptr inbounds [40 x i32], [40 x i32]* %A, i64 0, i64 38
  %116 = load i32, i32* %arrayidx.38, align 4
  %arrayidx2.38 = getelementptr inbounds [40 x i32], [40 x i32]* %B, i64 0, i64 38
  %117 = load i32, i32* %arrayidx2.38, align 4
  %add.38 = add nsw i32 %116, %117
  %arrayidx4.38 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 38
  store i32 %add.38, i32* %arrayidx4.38, align 4
  %arrayidx6.38 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 38
  %118 = load i32, i32* %arrayidx6.38, align 4
  %add7.38 = add nsw i32 %add7.37, %118
  %arrayidx.39 = getelementptr inbounds [40 x i32], [40 x i32]* %A, i64 0, i64 39
  %119 = load i32, i32* %arrayidx.39, align 4
  %arrayidx2.39 = getelementptr inbounds [40 x i32], [40 x i32]* %B, i64 0, i64 39
  %120 = load i32, i32* %arrayidx2.39, align 4
  %add.39 = add nsw i32 %119, %120
  %arrayidx4.39 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 39
  store i32 %add.39, i32* %arrayidx4.39, align 4
  %arrayidx6.39 = getelementptr inbounds [40 x i32], [40 x i32]* %c, i64 0, i64 39
  %121 = load i32, i32* %arrayidx6.39, align 4
  %add7.39 = add nsw i32 %add7.38, %121
  %call8 = call i64 @clock() #4
  %call9 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i32 noundef %add7.39)
  ret i32 0
}

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind
declare dso_local i64 @clock() #2

declare dso_local i32 @printf(i8* noundef, ...) #3

attributes #0 = { mustprogress noinline norecurse uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly nofree nounwind willreturn }
attributes #2 = { nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{i32 7, !"frame-pointer", i32 2}
!3 = !{!"clang version 14.0.6 (https://github.com/llvm/llvm-project.git f28c006a5895fc0e329fe15fead81e37457cb1d1)"}
